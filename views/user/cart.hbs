<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css"
        rel="stylesheet">
    <style>
        .cart-container {
            margin: auto;
            max-width: auto;
        }

        .cart-item {
            padding: 15px 0;
            border-bottom: 1px solid #ddd;
        }

        .cart-item img {
            width: 80px;
            height: auto;
        }

        .total-section {
            font-size: 1.1rem;
            font-weight: bold;
        }

        .btn-checkout {
            background-color: #ff4d4d;
            color: white;
            width: 100%;
        }

        @media (max-width: 768px) {
            .cart-item img {
                width: 60px;
            }

            .cart-item .col-md-4,
            .cart-item .col-md-2 {
                text-align: center;
            }

            .total-section span {
                font-size: 1rem;
            }

            .cart-summary .total-section {
                font-size: 1rem;
            }
        }
    </style>
</head>

<body>
    {{> header}}
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Cart</h4>
                        <div class="breadcrumb__links">
                            <a href="/user/home">Home</a>
                            <span>Cart</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>



    <div class="container-fluid " style="margin-top: 20px;">

        <input type="hidden" value="{{userid}}" id="ID">


        {{!-- <div class="coupon-section mt-4 ms-5 mb-2" style="display: flex; flex-direction: column; gap: 10px;">
            <!-- Form for applying the coupon -->
            <form id="couponForm" class="d-flex align-items-center gap-2">
                <input type="text" id="couponInput" placeholder="Enter coupon code" class="form-control"
                    style="max-width: 250px;" />
                <button type="submit" class="btn btn-primary btn-sm">Apply Coupon</button>
            </form>

            <!-- Form for removing the coupon -->
            <div style="display: flex;gap: 10px; ">
                <form id="removecoupun" class="d-flex align-items-center gap-2">
                    <input type="submit" value="Remove" class="btn btn-sm btn-danger">
                </form>

                <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                    style="align-items: start; margin-left: 0; " data-bs-target="#staticBackdrop">
                    Your Coupons
                </button>
            </div>

        </div> --}}

        <!-- Trigger Button for Modal -->

        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#couponModal" style="
        margin-left: 75px; 
        margin-bottom:10px;
        padding: 8px 20px; 
        font-size: 0.9rem; 
        font-weight: 600; 
        background: linear-gradient(135deg, #007bff, #0056b3); 
        color: white; 
        border: 2px solid #0056b3;
        box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3); 
        transition: all 0.3s ease;
        border-radius: 4px; /* Boxy style */
    " onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 6px 15px rgba(0, 123, 255, 0.4)';"
            onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='0 4px 10px rgba(0, 123, 255, 0.3)';">
            Manage Coupons
        </button>


        <!-- Modal Structure -->
        <div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content"
                    style="border-radius: 15px; overflow: hidden; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);">
                    <!-- Modal Header -->
                    <div class="modal-header"
                        style="background: linear-gradient(135deg, #007bff, #0056b3); color: white;">
                        <h5 class="modal-title" id="couponModalLabel">Coupon Management</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                            style="background-color: white; border-radius: 50%;"></button>
                    </div>

                    <!-- Modal Body -->
                    <div class="modal-body" style="padding: 20px; background: #f9f9f9;">
                        <!-- Form for Applying the Coupon -->
                        <form id="couponForm" class="d-flex align-items-center gap-3 mb-3">
                            <input type="text" id="couponInput" placeholder="Enter coupon code" class="form-control"
                                style="max-width: 300px; border: 2px solid #007bff; border-radius: 20px;" />
                            <button type="submit" class="btn btn-primary"
                                style="border-radius: 20px; padding: 10px 20px;">
                                Apply
                            </button>
                        </form>

                        <!-- Form for Removing the Coupon -->
                        <form id="removecoupun" class="d-flex align-items-center gap-3">
                            <button type="submit" class="btn btn-danger"
                                style="border-radius: 20px; padding: 10px 20px;">
                                Remove
                            </button>
                        </form>
                    </div>

                    <!-- Modal Footer -->
                    <div class="modal-footer"
                        style="background: #f1f1f1; display: flex; justify-content: space-between;">
                        <button type="button" class="btn btn-secondary" data-bs-toggle="modal"
                            data-bs-target="#staticBackdrop" style="border-radius: 20px;">
                            View Coupons
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal"
                            style="border-radius: 20px;">
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>


        <script>
            document.getElementById('removecoupun').addEventListener('submit', async function (event) {
                event.preventDefault()
                const x = document.getElementById('ID').value
                data = {
                    user: x
                }
                const res = await fetch('/user/removecoupun', {
                    method: 'post',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })

                const response = await res.json()
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        text: 'successfully removed'
                    }).then(() => window.location.reload())
                } else {
                    Swal.fire({
                        icon: 'errror',
                        text: 'there is no allpayed coupun'
                    })
                }
            })
        </script>


        <script>
            document.getElementById('couponForm').addEventListener('submit', async function (event) {
                event.preventDefault(); // Prevents the form from submitting normally
                console.log('Form submitted');
                const coupun = document.getElementById('couponInput').value.trim()
                const id = document.getElementById('ID').value
                const x = document.getElementById('ID').value
                console.log(x)
                const data = {
                    coupunId: coupun
                }

                const result = await fetch('/user/applycoupun', {
                    method: 'post',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })

                const response = await result.json();

                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        text: 'successfully added coupun',
                        text: 'successfully added coupun',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.href = `/user/cart`
                    })
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'an error occured',
                        text: response.message

                    })
                }


            });
        </script>


        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.css">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.js"></script>




        <style>
            #couponInput {
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 4px;
                font-size: 16px;

                outline: none;
                transition: border 0.3s;
            }

            #couponInput:focus {
                border: 1px solid #007bff;
            }

            #couponForm button {
                padding: 10px 15px;
                background-color: #007bff;
                color: #fff;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 16px;
                transition: background-color 0.3s;
            }

            #couponForm button:hover {
                background-color: #0056b3;
            }
        </style>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        {{#if limit}}
        <script>
            Swal.fire({
                icon: 'warning',
                title: 'Warning',
                text: '{{limit}}'
            });
        </script>
        {{/if}}



        <div class="container" style="max-width: 90%; margin: auto;">
            {{#each products}}
            <div class="card cart-item d-flex flex-column flex-md-row align-items-center p-3 shadow-sm rounded bg-white"
                data-product-id="{{this._id}}">

                <div class="cart-img col-12 col-md-2 text-center mb-3 mb-md-0">
                    <img src="/{{this.image.[0]}}" alt="Product Image" class="img-fluid rounded shadow-sm">
                </div>

                <div class="cart-details col-12 col-md-4 text-center text-md-start mb-3 mb-md-0">
                    <h5 class="fw-bold mb-1">{{this.name}}</h5>
                    <p class="text-muted small mb-0">Product ID: {{this._id}}</p>
                </div>
                <!-- Price and Quantity -->
                <div
                    class="cart-price-qty col-12 col-md-4 d-flex justify-content-between align-items-center mb-3 mb-md-0">
                    <span class="fw-bold text-danger price" data-price="{{this.regularprice}}"
                        id="product-{{this._id}}-price">Rs:
                        {{this.regularprice}}</span>
                    <div class="input-group" style="max-width: 120px;">
                        <div class="input-group-prepend">
                            <button class="btn btn-outline-secondary decrement-btn" type="button"
                                data-product-id="{{this._id}}">-</button>
                        </div>
                        <input type="number" class="form-control text-center quantity-input" min="1" max="8"
                            value="{{this.qty}}" data-product-id="{{this._id}}">
                        {{!-- <input type="hidden" value="{{this.qty}}" class="q"> --}}
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary increment-btn1" type="button"
                                data-product-id="{{this._id}}">+</button>
                        </div>
                    </div>
                </div>

                <!-- Remove Button -->
                <div class="cart-remove col-12 col-md-2 text-center">
                    <form action="/user/cart/remove" method="POST" class="d-inline">
                        <input type="hidden" name="productId" value="{{this._id}}">
                        <button type="submit" class="btn btn-sm btn-danger shadow-sm">Remove</button>
                    </form>
                </div>
            </div>


            <script>
                document.addEventListener("DOMContentLoaded", () => {

                    const decrementButtons = document.querySelectorAll(".decrement-btn");
                    const incrementButtons = document.querySelectorAll(".increment-btn1");
                    const quantityInputs = document.querySelectorAll(".quantity-input");
                    let Subtotal=document.getElementById('subtotal-amount')

                    const updateCart = async (productId, qty) => {
                        try {
                            const response = await fetch('/user/cart/update', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ productId, qty }),

                            });

                            const data = await response.json();
                            if (data.success) {
                                // Update price for the product
                                const priceElement = document.getElementById(`product-${productId}-price`);
                                priceElement.textContent = `Rs: ${data.updatedPrice}`;
                                const quantityInput = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
                                if (quantityInput) {
                                    quantityInput.value = data.updatedQty; // Assuming the updated quantity is sent in `data.updatedQty`
                                }
                                const newTotalAmount = data.newTotalAmount
                                if (newTotalAmount) {
                                    const totalElement = document.getElementById('total-amount');
                                    totalElement.textContent = newTotalAmount
                                }
                                Subtotal.textContent=data.subtotal
                            } else {
                                alert(data.message);
                            }
                        } catch (error) {
                            console.error("Error updating cart:", error);
                            alert("Something went wrong while updating the cart.");
                        }
                    };

                    decrementButtons.forEach(button => {
                        button.addEventListener("click", () => {
                            const productId = button.getAttribute("data-product-id");
                            console.log('product id-', productId)
                            const input = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
                            console.log('input - ', input)
                            const productPrice = document.querySelector(`.price[id="product-${productId}-price"]`);
                            const totalElement = document.getElementById('total-amount');

                            if (!productPrice || !input || !totalElement) {
                                console.error('Required DOM element not found!');
                                return;
                            }

                            let singleProduct = parseFloat(productPrice.dataset.price);
                            let total = parseFloat(totalElement.textContent.trim());
                            let currentQty = parseInt(input.value, 10);
                            console.log('current qty', currentQty)

                            if (currentQty > 1) {

                                currentQty--;

                                console.log('uptated -currentQty-', currentQty)

                                const newTotal = total - singleProduct;

                                console.log('minus current', currentQty)
                                updateCart(productId, currentQty);
                            }
                        });
                    });

                    incrementButtons.forEach(button => {
                        button.addEventListener("click", () => {

                            const productId = button.getAttribute("data-product-id");
                            console.log('product id', productId)
                            const input = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
                            console.log('input', input)
                            const productPrice = document.querySelector(`.price[id="product-${productId}-price"]`);
                            const totalElement = document.getElementById('total-amount');


                            if (!productPrice || !input || !totalElement) {
                                console.error('Required DOM element not found!');
                                return;
                            }

                            let singleProduct = parseFloat(productPrice.dataset.price);
                            let total = parseFloat(totalElement.textContent.trim());
                            let currentQty = parseInt(input.value, 10);
                            console.log('current quantity', currentQty)
                            if (currentQty < parseInt(input.getAttribute("max"), 10)) {
                                currentQty += 1;
                                console.log('skdfkf', input.value)

                                console.log('after qty', currentQty)
                                console.log('input value', input.value)
                                const newTotal = total + singleProduct;


                                updateCart(productId, currentQty);

                            }
                        });
                    });

                    quantityInputs.forEach(input => {
                        input.addEventListener("change", () => {
                            const productId = input.getAttribute("data-product-id");
                            let currentQty = parseInt(input.value, 10);
                            if (currentQty > 8) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'warning',
                                    text: 'you cant add quantity more than 8'
                                })
                                input.value = 8
                                return false
                            }
                            if (currentQty < 8) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'warning',
                                    text: 'you cant add quantity less than 1'
                                })
                                input.value = 1
                                return false
                            }

                            if (isNaN(currentQty) || currentQty < 1) {
                                currentQty = 1;
                            } else if (currentQty > parseInt(input.getAttribute("max"), 10)) {
                                currentQty = parseInt(input.getAttribute("max"), 10);
                            }

                            // Prevent double updates by ensuring the value is set only if it has changed
                            if (currentQty !== parseInt(input.value, 10)) {
                                input.value = currentQty;
                                updateCart(productId, currentQty);
                            }
                        });
                    })
                });


            </script>

            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


            {{/each}}
            <style>
                .cart-item {
                    margin-bottom: 1.5rem;
                }

                .cart-item img {
                    max-width: 100px;
                    margin-right: 1rem;
                }
            </style>

            <input type="hidden" value="{{totalAmount}}" id="session">
            <script>
                window.onload = function () {
                    const x = document.getElementById('session').value
                    console.log(x)
                }
            </script>



            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
                aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">Your Coupons</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Coupon Details Table -->
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th scope="col">Coupon Name</th>
                                        <th scope="col">Coupon Code</th>
                                        <th scope="col">Min Purchase</th>
                                        <th scope="col">Max Discount</th>
                                        <th scope="col">Expire Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Example Coupon Row -->
                                    {{#each coupuns}}
                                    <tr>
                                        <td>{{this.title}}</td>
                                        <td>{{this.code}}</td>

                                        <td>{{this.minimumPurchase}}</td>
                                        <td>{{this.maximumDiscount}}</td>
                                        <td>{{formatDate this.expiryDate}}</td>
                                    </tr>
                                    {{/each}}
                                    <!-- Add more rows here as needed -->
                                    <!-- Example Coupon Row -->

                                </tbody>
                            </table>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Understood</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-6 offset-md-6 cart-summary">
                    <!-- Subtotal Section -->
                    <div                   
                        class="total-section d-flex justify-content-between align-items-center p-3 bg-light shadow-sm rounded" style="margin-top: 15px;">
                        <span class="fw-bold">Subtotal:</span>
                        <span id="subtotal-amount" class="fw-bold text-primary">Rs: {{realprice}}</span>
                    </div>
 
                    <div
                        class="total-section d-flex justify-content-between align-items-center p-3 bg-light shadow-sm rounded mt-3">
                        <span class="fw-bold">Discount Applied:</span>
                        <span id="discount-amount" class="fw-bold text-danger">Rs: {{discount}}</span>
                    </div>
 
                    <div
                        class="total-section d-flex justify-content-between align-items-center p-3 bg-light shadow-sm rounded mt-3">
                        <span class="fw-bold">Total:</span>
                        <span id="total-amount" class="fw-bold text-success"> {{totalAmount}}</span>
                    </div>

                    <!-- Buttons -->
                    <div class="d-flex justify-content-between mt-4" style="margin-bottom: 35px;">
                        <a href="/user/shop" class="btn btn-outline-secondary w-100 me-2 btn-resize">Continue
                            Shopping</a>
                        <form action="/user/checkout/{{cart.id}}" method="post" class="w-100">
                            <button class="btn btn-success w-100 btn-resize" type="submit">Proceed to Checkout</button>
                        </form>
                    </div>
                </div>
            </div>



        </div>
        <style>
            /* Default styles for desktop remain unchanged */
            .btn-resize {
                font-size: 1rem;
                /* Normal size for larger screens */
                padding: 10px;
                /* Normal padding for larger screens */
            }

            /* Adjustments for mobile screens */
            @media (max-width: 768px) {
                .btn-resize {
                    font-size: 0.8rem;
                    padding: 5px;
                }
            }
        </style>
        <style>
            /* Cart Item Styling */
            .cart-item {
                border: 1px solid #ddd;
                border-radius: 8px;
                transition: transform 0.2s ease-in-out;
                padding: 15px;
            }

            .cart-item:hover {
                transform: scale(1.02);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

            .cart-img img {
                max-width: 100px;
                max-height: 100px;
            }

            /* Cart Summary */
            .cart-summary .total-section {
                font-size: 1.2rem;
            }

            /* Buttons */
            .btn-checkout {
                background-color: #28a745;
                color: white;
                border: none;
            }

            .btn-checkout:hover {
                background-color: #218838;
                color: white;
            }

            /* Mobile View Adjustments */
            @media (max-width: 768px) {
                .cart-item {
                    flex-direction: column;
                    text-align: center;
                }

                .cart-img img {
                    max-width: 120px;
                    margin: 0 auto 10px;
                }

                .cart-details {
                    margin-bottom: 10px;
                }

                .cart-price-qty {
                    flex-direction: column;
                    align-items: center;
                    text-align: center;
                    gap: 10px;
                }

                .cart-price-qty span {
                    margin-bottom: 5px;
                }

                .cart-remove {
                    margin-top: 10px;
                }

                .cart-summary .total-section {
                    font-size: 1rem;
                }
            }
        </style>



        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>



        {{> footer}}
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>