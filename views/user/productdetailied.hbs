<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TimeHaven - Product Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --text-color: #2c3e50;
            --background-color: #f8f9fa;
            --card-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
        }

        .product-container {
            max-width: 1200px;
            margin: 3rem auto;
            background-color: white;
            border-radius: 20px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
            padding: 2rem;
        }

        .product-image-gallery {
            height: 600px;
            position: relative;
            border-radius: 15px;
            overflow: hidden;
        }

        .carousel {
            height: 100%;
            background-color: #f8f9fa;
        }

        .carousel-item {
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #fff;
        }

        .carousel-item img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform 0.5s ease;
        }

        .carousel-item img:hover {
            transform: scale(1.02);
        }

        .carousel-control-prev,
        .carousel-control-next {
            width: 50px;
            height: 50px;
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 50%;
            top: 50%;
            transform: translateY(-50%);
            margin: 0 1rem;
        }

        .product-details {
            padding: 2rem;
        }

        .product-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 1.5rem;
        }

        .product-price {
            font-size: 2.5rem;
            color: var(--secondary-color);
            font-weight: 600;
            margin: 1.5rem 0;
        }

        .product-rating {
            color: #ffc107;
            font-size: 1.2rem;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            gap: 15px;
            margin: 2rem 0;
        }

        .quantity-control button {
            width: 45px;
            height: 45px;
            border: none;
            background-color: var(--background-color);
            border-radius: 10px;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }

        .quantity-control button:hover {
            background-color: var(--secondary-color);
            color: white;
        }

        .quantity-control input {
            height: 45px;
            border: 2px solid var(--background-color);
            border-radius: 10px;
            font-size: 1.2rem;
        }

        .color-options {
            margin: 1.5rem 0;
        }

        .color-circle {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            cursor: pointer;
            transition: transform 0.3s ease;
            border: 2px solid #fff;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
        }

        .color-circle:hover {
            transform: scale(1.1);
        }

        .action-buttons {
            display: flex;
            gap: 20px;
            margin-top: 2rem;
        }

        .action-buttons .btn {
            padding: 12px 30px;
            font-size: 1.1rem;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: var(--secondary-color);
            border: none;
        }

        .btn-primary:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

        .btn-danger {
            background-color: var(--accent-color);
            border: none;
        }

        .btn-danger:hover {
            background-color: #c0392b;
            transform: translateY(-2px);
        }

        .product-info {
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid #eee;
        }

        .product-info h5 {
            font-size: 1.3rem;
            margin-bottom: 1.5rem;
            color: var(--primary-color);
        }

        .product-info ul li {
            margin-bottom: 1rem;
            font-size: 1.1rem;
        }

        @media (max-width: 768px) {
            .product-container {
                margin: 1rem;
                padding: 1rem;
            }

            .product-image-gallery {
                height: 400px;
            }

            .product-title {
                font-size: 2rem;
            }

            .action-buttons {
                flex-direction: column;
            }
        }
    </style>
    <script src="/js/jquery-3.3.1.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/jquery.nice-select.min.js"></script>
    <script src="/js/jquery.nicescroll.min.js"></script>
    <script src="/js/jquery.magnific-popup.min.js"></script>
    <script src="/js/jquery.countdown.min.js"></script>
    <script src="/js/jquery.slicknav.js"></script>
    <script src="/js/mixitup.min.js"></script>
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/main.js"></script>
    <link rel="stylesheet" href="/css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="/css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="/css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="/css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="/css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="/css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="/css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="/css/style.css" type="text/css">
</head>

<body>

    <!-- Rest of the HTML remains the same -->
    <!-- Only the styling has been enhanced -->
    {{> header}}

    <div class="container">
        <div class="product-container row">
            <!-- Image Gallery Section -->
            <div class="col-md-6 product-image-gallery">
                <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                    {{!-- <div class="carousel-inner h-100 ">
                        <div class="carousel-item active zoom-container">
                            <img src="/{{product.image.[0]}}" class="d-block w-100" alt="Product Image 1">
                            <div class="zoom-overlay"></div>
                        </div>
                        <div class="carousel-item zoom-container">
                            <img src="/{{product.image.[1]}}" class="d-block w-100" alt="Product Image 2">
                            <div class="zoom-overlay"></div>
                        </div>
                        <div class="carousel-item zoom-container">
                            <img src="/{{product.image.[2]}}" class="d-block w-100" alt="Product Image 3">
                            <div class="zoom-overlay"></div>
                        </div>
                    </div> --}}


                    <div class="carousel-inner h-100">
                        <div class="carousel-item active zoom-container">
                            <img src="/{{product.image.[0]}}" class="d-block w-100 zoom-image" alt="Product Image 1">
                            <div class="zoom-overlay"></div>
                        </div>
                        <div class="carousel-item zoom-container">
                            <img src="/{{product.image.[1]}}" class="d-block w-100 zoom-image" alt="Product Image 2">
                            <div class="zoom-overlay"></div>
                        </div>
                        <div class="carousel-item zoom-container">
                            <img src="/{{product.image.[2]}}" class="d-block w-100 zoom-image" alt="Product Image 3">
                            <div class="zoom-overlay"></div>
                        </div>
                    </div>


                    {{!-- <style>
                        .zoom-container {
                            position: relative;
                            overflow: hidden;
                        }
                    </style> --}}
                    <style>
                        .zoom-container {
                            position: relative;
                            overflow: hidden;
                            /* Keep the zoom overlay contained */
                        }

                        .zoom-overlay {
                            display: none;
                            position: absolute;
                            width: 200px;
                            /* Adjust this value for zoom area size */
                            height: 200px;
                            border: 2px solid rgba(0, 0, 0, 0.3);
                            pointer-events: none;
                            /* Make it non-interactive */
                            z-index: 10;
                            background-repeat: no-repeat;
                            background-color: rgba(255, 255, 255, 0.2);
                            /* Optional debug visibility */
                        }
                    </style>

                    <!-- Custom Carousel Controls -->
                    <button class="carousel-control-prev custom-carousel-control" type="button"
                        data-bs-target="#productCarousel" data-bs-slide="prev" style="margin-top: 230px;">
                        <div class="control-circle">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        </div>
                    </button>
                    <button class="carousel-control-next custom-carousel-control" type="button"
                        data-bs-target="#productCarousel" data-bs-slide="next" style="margin-top: 230px;">
                        <div class="control-circle">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        </div>
                    </button>
                </div>
            </div>

            <!-- Custom CSS to center the controls -->
            <style>
                .carousel-control-prev,
                .carousel-control-next {
                    position: absolute;
                    top: 50%;
                    transform: translateY(-50%);
                    z-index: 5;
                    width: 5%;
                }

                .carousel-control-prev {
                    left: 0;
                }

                .carousel-control-next {
                    right: 0;
                }

                .control-circle {
                    background-color: rgba(0, 0, 0, 0.5);
                    /* Optional: For background color of control button */
                    border-radius: 50%;
                    padding: 10px;
                }

                .carousel-inner img {
                    object-fit: cover;
                    /* Ensures the image covers the area without stretching */
                    width: 100%;
                    height: 100%;
                }
            </style>



            <!-- Rest of the product details remain the same -->
            <div class="col-md-6 product-details">
                <h1 class="product-title">{{product.name}}</h1>

                <div class="d-flex align-items-center mb-3">
                    <div class="product-rating me-2">
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star"></i>
                    </div>
                    <span>(42 Reviews)</span>
                </div>
                <input type="hidden" value="{{product.quantity}}" id="qty">

                <p class="text-muted mb-3"
                    style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;">
                    {{product.discription}}</p>
                    <p class="mb3 " style="color:#1ad633">{{product.status}}</p>
               
                {{#if (gt product.offerprice 0)}}
                <div class="" style="color: red; font-size: medium; font-weight: 400; text-decoration: line-through">
                    ₹{{#if product.realprice}}{{product.realprice}}{{else}}N/A{{/if}}
                </div>
                {{/if}}

                <div class="product-price">₹{{product.regularprice}}</div>
                <p style="font-size: small;margin:0%;color:#1ad633">{{product.quantity}} In Stock</p>
                <div class="mb-3">

                    <strong>Color:</strong> Silver

                </div>

                <div class="quantity-control">
                    <button onclick="decreaseQuantity()">-</button>
                    <input type="number" id="quantity" value="1" min="1" max="8"
                        style="width: 70px; text-align: center;">
                    <button onclick="increaseQuantity()">+</button>
                </div>

                <div class="action-buttons">
                    <form action="/user/addcart/{{product.id}}/{{userid}}" method="post"
                        onsubmit="updateHiddenQuantity()">
                        <input type="hidden" value="{{product.regularprice}}" name="regularprice">
                        <input type="hidden" id="hiddenQuantity" name="quantity" value="1">
                        <button type="submit" class="btn btn-primary d-flex align-items-center">
                            <i class="bi bi-cart-plus me-2"></i> Add to Cart
                        </button>
                    </form>
                    <form id="addtowishlist">
                        <input type="hidden" value="{{product.id}}" id="productId">

                        <button type="submit" class="btn btn-danger d-flex align-items-center">
                            <i class="bi bi-heart me-2"></i> Add to Wishlist
                        </button>
                    </form>
                </div>
            </div>
        </div>
        <script>
            document.getElementById('addtowishlist').addEventListener('submit', async function (event) {
                event.preventDefault(); // Prevent the default form submission

                const product = document.getElementById('productId').value;

                try {
                    const response = await fetch('/user/addtowishlist', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productId: product }),
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Successfully added to the wishlist',
                            showConfirmButton: false,
                            timer: 1500,
                        });
                    } else {
                        const res = await response.text();
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: res,
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while adding to the wishlist.',
                    });
                }
            });

        </script>
        <style>
            .product-container {
                max-width: 1200px;
                margin: 2rem auto;
                background-color: white;
                border-radius: 15px;
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
                overflow: hidden;
            }

            .product-image-gallery {
                height: 500px;
                position: relative;
                background-color: #f8f9fa;
                border-radius: 10px;
                overflow: hidden;
            }

            /* Enhanced carousel styling */
            .carousel {
                height: 100%;
            }

            .carousel-item {
                height: 100%;
                background-color: white;
            }

            .carousel-item img {
                width: 100%;
                height: 100%;
                object-fit: contain;
                object-position: center;
            }

            /* Enhanced carousel controls */
            .custom-carousel-control {
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                width: auto;
                padding: 0;
                z-index: 5;
            }

            .control-circle {
                width: 40px;
                height: 40px;
                background-color: rgba(255, 255, 255, 0.9);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                transition: all 0.3s ease;
            }

            .control-circle:hover {
                background-color: white;
                transform: scale(1.1);
            }

            .carousel-control-prev {
                left: 15px;
            }

            .carousel-control-next {
                right: 15px;
            }

            .carousel-control-prev-icon,
            .carousel-control-next-icon {
                width: 20px;
                height: 20px;
                background-size: 100%;
                filter: invert(1) grayscale(100);
            }

            /* Mobile responsiveness */
            @media (max-width: 768px) {
                .product-image-gallery {
                    height: 350px;
                    margin: 1rem 0;
                }

                .control-circle {
                    width: 35px;
                    height: 35px;
                    background-color: rgba(255, 255, 255, 0.95);
                }

                .carousel-control-prev {
                    left: 10px;
                }

                .carousel-control-next {
                    right: 10px;
                }

                .product-container {
                    margin: 1rem;
                    padding: 1rem;
                }

                .product-details {
                    padding: 1rem;
                }

                .action-buttons {
                    flex-direction: column;
                    gap: 1rem;
                }

                .action-buttons button {
                    width: 100%;
                }
            }

            /* Additional responsive tweaks for very small screens */
            @media (max-width: 480px) {
                .product-image-gallery {
                    height: 300px;
                }

                .control-circle {
                    width: 30px;
                    height: 30px;
                }

                .carousel-control-prev-icon,
                .carousel-control-next-icon {
                    width: 15px;
                    height: 15px;
                }
            }
        </style>
    </div>
    {{!--
    <script>
        document.querySelectorAll('.zoom-container').forEach(container => {
            const overlay = container.querySelector('.zoom-overlay');
            const img = container.querySelector('.zoom-image');

            container.addEventListener('mousemove', (e) => {
                const rect = container.getBoundingClientRect();
                const xPos = e.clientX - rect.left;
                const yPos = e.clientY - rect.top;

                overlay.style.display = 'block';
                overlay.style.left = `${xPos - overlay.offsetWidth / 2}px`;
                overlay.style.top = `${yPos - overlay.offsetHeight / 2}px`;


                overlay.style.backgroundImage = `url(${img.src})`;
                overlay.style.backgroundSize = `${img.width * 2}px ${img.height * 2}px`;
                overlay.style.backgroundPosition = `-${xPos * 2}px -${yPos * 2}px`;
            });

            container.addEventListener('mouseleave', () => {
                overlay.style.display = 'none';
            });
        });

    </script> --}}

    <script>
        document.querySelectorAll('.zoom-container').forEach(container => {
            const overlay = container.querySelector('.zoom-overlay');
            const img = container.querySelector('.zoom-image');

            container.addEventListener('mousemove', (e) => {
                const rect = container.getBoundingClientRect();
                const xPos = e.clientX - rect.left; // Mouse X position relative to the container
                const yPos = e.clientY - rect.top;  // Mouse Y position relative to the container

                // Show the zoom overlay
                overlay.style.display = 'block';
                overlay.style.left = `${xPos - overlay.offsetWidth / 2}px`;
                overlay.style.top = `${yPos - overlay.offsetHeight / 2}px`;

                // Set the zoomed image as background
                overlay.style.backgroundImage = `url(${img.src})`;
                overlay.style.backgroundSize = `${img.width * 2}px ${img.height * 2}px`; // Double the size for zoom
                overlay.style.backgroundPosition = `-${xPos * 2}px -${yPos * 2}px`; // Position the zoom
            });

            container.addEventListener('mouseleave', () => {
                // Hide the overlay on mouse leave
                overlay.style.display = 'none';
            });
        });


    </script>


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript"
        src="https://cdn.rawgit.com/igorlino/elevatezoom-plus/1.1.6/src/jquery.ez-plus.js"></script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.16/dist/sweetalert2.all.min.js"></script>

    <script>
        document.getElementById('addtowishlist').addEventListener('click', async function () {
            const product = document.getElementById('productId').value;

            const response = await fetch('/user/addtowishlist', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({

                    productId: product
                })

            });
            if (response.ok) {
                console.log('aded in that ')
                Swal.fire({
                    icon: 'success',
                    title: 'success',
                    text: 'successfully added to the wishlist',
                    showConfirmButton: false,
                    timer: 1500
                })
            } else {
                const res = await response.text()
                Swal.fire({
                    icon: 'warning',
                    title: 'warning',
                    text: res
                })
            }
        })
    </script>

    <script>
        const quantityInput = document.getElementById('quantity');
        const hiddenQuantityInput = document.getElementById('hiddenQuantity');

        function increaseQuantity() {
            const currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity < 8) {
                quantityInput.value = currentQuantity + 1;
                updateHiddenQuantity();
            } else {
                Swal.fire({
                    title: 'Limit',
                    text: 'You can’t select more than 8 items',
                    icon: 'warning',
                    confirmButtonText: 'OK',
                });
            }
        }

        function decreaseQuantity() {
            const currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity > 1) {
                quantityInput.value = currentQuantity - 1;
                updateHiddenQuantity();
            } else {
                Swal.fire({
                    title: 'Limit',
                    text: 'Select at least one item.',
                    icon: 'warning',
                    confirmButtonText: 'OK',
                });
            }
        }

        function updateHiddenQuantity() {
            const stock = parseInt(document.getElementById('qty').value); // Convert to number
            const quantity = parseInt(quantityInput.value); // Convert to number

            if (quantity > 8) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Warning',
                    text: 'you cant buy items more than 8'
                })
                hiddenQuantityInput.value = ''; // Reset to prevent invalid data
                return false;
            }
            if (quantity <= 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Warning',
                    text: 'Enter a valid qty'
                })
                hiddenQuantityInput.value = ''; // Reset to prevent invalid data
                return false;
            }
            if (quantity > stock) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Warning',
                    text: 'Out of stock'
                })
                hiddenQuantityInput.value = ''; // Reset to prevent invalid data
                return false;
            } else {

                hiddenQuantityInput.value = quantity; // Assign the valid quantity
                return true; // Validation successful
            }
        }

        document.querySelector('form').addEventListener('submit', function (event) {
            const isValid = updateHiddenQuantity(); // Check quantity before submission

            if (!isValid) {
                event.preventDefault();
            }
        });

    </script>

    <div class="container mb-2">
        <div class="row g-4">
            <!-- Product 1 -->
            {{#each products}}
            <div class="col-6 col-sm-6 col-md-4 col-lg-3 mb-3">
                <div class="card product-card shadow-sm border-0">
                    <div style="position: relative; display: inline-block;">
                        {{#if (gt this.offerPersent 0)}}
                        <span
                            style="position: absolute; top: 10px; right: 10px; background: #1ad633; color: #fff; font-size: 14px; font-weight: bold; padding: 3px 8px; border-radius: 5px;">
                            {{this.offerPersent}}% OFF
                        </span>
                        {{/if}}
                        <img src="/{{this.image.[0]}}" height="170px" alt="Product 1"
                            class="card-img-top product-image">
                    </div>

                    <div class="card-body text-center">
                        <h6 class="card-title mb-2" style="font-weight: 600; color: #333;">{{this.name}}</h6>
                        {{#if (gt this.offerprice 0)}}
                        <p>
                            <span class="price"
                                style="text-decoration: line-through; color: #d9534f;">₹{{this.realprice}}</span>
                            <span class="offer-price"
                                style="color: #5cb85c; font-weight: bold;">₹{{this.offerprice}}</span>
                        </p>
                        {{else}}
                        <p>
                            <span class="price" style="color: #5cb85c; font-weight: bold;">₹{{this.realprice}}</span>
                        </p>
                        {{/if}}

                        <form action="/user/details/{{this.id}}" method="get">
                            <button class="btn btn-primary btn-sm" type="submit" style="width: 100%; font-weight: 500;">
                                View Details
                            </button>
                        </form>
                    </div>
                </div>
            </div>
            {{/each}}
        </div>
    </div>


    {{> footer}}

    <!-- Keep all the original scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Original scripts remain unchanged -->
</body>

</html>